#!/usr/bin/env ruby

require 'owlscribble'
require 'tempfile'
require 'pp'
require 'rack'

$pages = {}

OWLScribble.each_wiki_link do |tag, page_name, link_text|
  $pages[$page] << page_name

  tag.name  = 'a'
  tag.href  = "/#{Rack::Utils.escape(page_name)}"
  tag.text  = link_text.dewikiword
  #c = Page[page_name].exists? ? 'existing-wiki-link' : 'missing-wiki-link'
  tag.class = 'foo'
end

OWLScribble.each_wiki_command do |tag, command, params|
  case command
  when 'include'
    tag.name = 'div'
    tag.class = 'included'
    tag.text = Page.get(*params).render
  else
    tag.name  = 'span'
    tag.class = 'unhandled_command'
    tag.text = "###{command}( #{params.join ', '} )##"
  end
end

existing = []

Dir['pages/*.owl'].each do |file|
  $page = File.basename(file, '.owl')
  $pages[$page] ||= []
  existing << $page
  owl = OWLScribble.new(File.read(file))
end

Tempfile.open('graph.dot') do |dot|
  dot.puts 'Digraph Wiki {'

  $pages.each do |page, links|
    links.each do |link|
      color = existing.include?(link) ? '#0000ff' : '#ff0000'
      dot.puts %(  #{page} -> #{link} [color="#{color}"];)
    end
  end

  dot.puts '}'
  dot.close

  system('dot', '-Tpng', '-O', dot.path)
  system('feh', png = "#{dot.path}.png")
  puts png
end
